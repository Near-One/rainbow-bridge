steps:
    - command: |
        source ~/.cargo/env
        rustup default stable
        ci/test_verify_eth_headers.sh
    
      label: "verify eth headers"
      agents:
      - "queue=medium"
  
    - command: | 
        source ~/.cargo/env
        rustup default stable
        ci/test_verify_eth_proofs.sh
    
      label: "verify eth proofs"
      agents:
      - "queue=medium"
  
    - command: |
        source ~/.cargo/env
        rustup default stable
        cd libs-rs
        eth-client/test.sh
    
      label: "eth-client tests"
      agents:
      - "queue=medium"
  
    - command: |
        source ~/.cargo/env
        rustup default stable
        cd libs-rs
        eth-prover/test.sh
    
      label: "eth-prover tests"
      agents:
      - "queue=medium"
  
    - command: |
        cd libs-rs
        ./build_all.sh
        changed_files=$$(git status --porcelain --untracked-files=no | wc -l)
        if [ $$changed_files -gt 0 ]; then
          echo 'contract changed, please rebuild contract'
          exit 1
        fi
    
      label: "build all rust contracts"
      agents:
      - "queue=bridge"
  
    - command: |
        source ~/.cargo/env
        source ~/.nvm/nvm.sh
        source ~/.yarn/yarn.sh
        cd libs-sol
        ./build_all.sh
    
      label: "build all solidity contracts"
      agents:
      - "queue=medium"
  
    - label: "lint" 
      command: |
        source ~/.cargo/env
        source ~/.nvm/nvm.sh
        source ~/.yarn/yarn.sh
        cd environment
        yarn
        yarn run lint
        cd ../libs-sol/nearbridge
        yarn
        yarn lint
      agents:
      - "queue=medium"
      soft_fail:
      - exit_status: 1
      - exit_status: 2
  
    - command: |
        source ~/.nvm/nvm.sh
        source ~/.yarn/yarn.sh
        cd libs-sol/nearbridge
        yarn
        yarn test
        node test/ed25519-test.js
    
      label: "nearbridge test"
      agents:
      - "queue=medium"
  
    - command: |
        source ~/.cargo/env
        cd libs-rs
        cargo test
    
      label: "rust contracts test"
      agents:
      - "queue=medium"
  
    - command: | 
        source ~/.nvm/nvm.sh
        source ~/.yarn/yarn.sh
        cd environment
        yarn
        cd ../libs-sol/nearprover
        yarn
        yarn test
    
      label: "nearprover test"
      agents:
      - "queue=medium"
    
    - label: "e2e test"
      command: |
        source ~/.nvm/nvm.sh
        source ~/.cargo/env
        source ~/.yarn/yarn.sh

        if [[ ! -d ~/go ]]; then
          wget -q -O - https://raw.githubusercontent.com/canha/golang-tools-install-script/master/goinstall.sh | bash
        fi

        export GOROOT=~/.go
        export GOPATH=~/go
        export PATH=$$GOPATH/bin:$$GOROOT/bin:$$PATH
        npm i -g ganache-cli
        git submodule update --init --recursive

        # hard link pm2 logs to current dir, so buildkite can pick up them as artifacts
        mkdir -p ~/.rainbow/logs/eth-relay
        mkdir -p ~/.rainbow/logs/near-relay
        mkdir -p ~/.rainbow/logs/ganache
        touch eth-relay-out.log
        touch eth-relay-err.log
        touch near-relay-out.log
        touch near-relay-err.log
        touch ganache-out.log
        touch ganache-err.log
        if [[ ! -f ~/.rainbow/logs/eth-relay/out.log ]]; then
          ln eth-relay-out.log ~/.rainbow/logs/eth-relay/out.log
          ln eth-relay-err.log ~/.rainbow/logs/eth-relay/err.log
          ln near-relay-out.log ~/.rainbow/logs/near-relay/out.log
          ln near-relay-err.log ~/.rainbow/logs/near-relay/err.log
          ln ganache-out.log ~/.rainbow/logs/ganache/out.log
          ln ganache-err.log ~/.rainbow/logs/ganache/err.log
        fi
        
        cd environment/vendor/ethashproof
        ./build.sh
        cd -
        rustup default stable
        rustup target add wasm32-unknown-unknown
        cd environment
        yarn
        node index.js clean
        cd ..
        ci/e2e.sh
    
      artifact_paths:
      - "*.log"
      timeout: 40
    
      agents:
      - "queue=default"
  
    - command: |
        source ~/.nvm/nvm.sh
        source ~/.yarn/yarn.sh
        ci/test_verify_near_headers.sh
    
      label: "verify near headers"
      agents:
      - "queue=medium"
  
    - command: |
        source ~/.nvm/nvm.sh
        source ~/.yarn/yarn.sh
        cd environment
        yarn
        cd ../libs-sol/nearprover
        yarn
        cd ../..
        ci/test_verify_near_proofs.sh
    
      label: "verify near proofs"
      agents:
      - "queue=medium"
